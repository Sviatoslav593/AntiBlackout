import { NextRequest, NextResponse } from "next/server";
import { supabaseAdmin } from "@/lib/supabaseAdmin";

export async function POST(request: NextRequest) {
  try {
    console.log("üöÄ Setting up categories...");

    // –î–æ–¥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ XML —Ñ—ñ–¥—É
    const categories = [
      { id: 1, name: "–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏ —Ç–∞ powerbank", parent_id: null },
      { id: 3, name: "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ñ –±–∞—Ç–∞—Ä–µ—ó", parent_id: 1 },
      { id: 14, name: "–ó–∞—Ä—è–¥–∫–∏ —Ç–∞ –∫–∞–±–µ–ª—ñ", parent_id: null },
      { id: 15, name: "–ú–µ—Ä–µ–∂–µ–≤—ñ –∑–∞—Ä—è–¥–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó", parent_id: 14 },
      { id: 16, name: "–ö–∞–±–µ–ª—ñ usb", parent_id: 14 },
      { id: 80, name: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –∑–∞—Ä—è–¥–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó", parent_id: 14 },
    ];

    const { error } = await supabaseAdmin
      .from("categories")
      .upsert(categories, { onConflict: "id" });

    if (error) {
      console.error("‚ùå Error setting up categories:", error);
      return NextResponse.json(
        {
          success: false,
          message: "Failed to setup categories",
          error: error.message,
        },
        { status: 500 }
      );
    }

    console.log("‚úÖ Categories setup completed");

    return NextResponse.json({
      success: true,
      message: "Categories setup successfully",
      categories: categories.length,
    });
  } catch (error) {
    console.error("‚ùå Error in categories setup:", error);
    return NextResponse.json(
      {
        success: false,
        message: "Failed to setup categories",
        error: error instanceof Error ? error.message : "Unknown error",
      },
      { status: 500 }
    );
  }
}
